I"H<p>FBV로 렌딩시 특정 기능을 추가 및 적용하는 것은 간단하지만, CBV에서 적용하기는 조금 까다롭습니다.</p>

<p>DB에서 특정 데이터를 불러오기 위해 필요한 <code class="language-plaintext highlighter-rouge">pk</code>등을 개발자가 직접 선언하지 않기 때문에, 원하는 데이터를 불러오기가 단순하지 않습니다.</p>

<p>물론 답은 <a href="https://docs.djangoproject.com/en/2.0/ref/class-based-views/generic-display/">django document</a>에 나와 있긴하지만, 답을 봐도 잘 이해가 어렵습니다.</p>

<p>현재 이 작업은 <a href="https://kimdoky.github.io/front/2018/03/22/front-google-map.html">GPS를 추출하는 작업을 FBV에서는 간단히 구현</a>해본 상태이고, CBV에서 구현하기 위한 것이 목적입니다.</p>

<h3 id="detailview에서-pk-값-얻기">DetailView에서 PK 값 얻기</h3>
<p>DetailView는 개발자가 따로 pk를 지정하지 않아도 url에서 pk를 받아와서 detail view를 구현해 주는 고마운 CBV입니다.<br />
하지만 직접 pk를 지적하지 않기 때문에 pk값을 얻어서 사용하려면 <code class="language-plaintext highlighter-rouge">get_context_data</code> 함수를 추가해주어야 합니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">PhotoDetailView</span><span class="p">(</span><span class="n">DetailView</span><span class="p">):</span>
    <span class="n">model</span> <span class="o">=</span> <span class="n">Album</span>

    <span class="k">def</span> <span class="nf">get_context_data</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
        <span class="n">context</span> <span class="o">=</span> <span class="nb">super</span><span class="p">().</span><span class="n">get_context_data</span><span class="p">(</span><span class="o">**</span><span class="n">kwargs</span><span class="p">)</span>
        <span class="c1"># self.kwargs['pk']를 통해서 url에서 pk값을 받을 수 있습니다.
</span>        <span class="c1"># url은 `path('&lt;pk&gt;/', PhotoView.as_view())으로 구현되어있어서 해당 pk 부분을 받아옵니다.`
</span>        <span class="n">context</span><span class="p">[</span><span class="s">'photo_list'</span><span class="p">]</span> <span class="o">=</span> <span class="n">Photo</span><span class="p">.</span><span class="n">objects</span><span class="p">.</span><span class="nb">filter</span><span class="p">(</span><span class="n">album_id</span><span class="o">=</span><span class="bp">self</span><span class="p">.</span><span class="n">kwargs</span><span class="p">[</span><span class="s">'pk'</span><span class="p">])</span>
        <span class="k">return</span> <span class="n">context</span>

<span class="n">PhotoView</span> <span class="o">=</span> <span class="n">PhotoDetailView</span><span class="p">.</span><span class="n">as_view</span><span class="p">()</span>
</code></pre></div></div>

<h3 id="특정-함수-실행하기">특정 함수 실행하기</h3>
<p>PK값을 얻었으니 FBV와 동일하게 구현하면 됩니다. (클래스 안에서 함수를 선언하는 것뿐이니…)</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">get_context_data</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
    <span class="n">context</span> <span class="o">=</span> <span class="nb">super</span><span class="p">().</span><span class="n">get_context_data</span><span class="p">(</span><span class="o">**</span><span class="n">kwargs</span><span class="p">)</span>
    <span class="n">context</span><span class="p">[</span><span class="s">'photo_list'</span><span class="p">]</span> <span class="o">=</span> <span class="n">Photo</span><span class="p">.</span><span class="n">objects</span><span class="p">.</span><span class="nb">filter</span><span class="p">(</span><span class="n">album_id</span><span class="o">=</span><span class="bp">self</span><span class="p">.</span><span class="n">kwargs</span><span class="p">[</span><span class="s">'pk'</span><span class="p">])</span>
    <span class="c1"># google map에 표기하기 위해 google api키를 불러옵니다.
</span>    <span class="n">context</span><span class="p">[</span><span class="s">'api'</span><span class="p">]</span> <span class="o">=</span> <span class="n">settings</span><span class="p">.</span><span class="n">GOOGLE_API</span>
    <span class="c1"># 원하는 데이터들을 pk를 이용하여 추출하고, 데이터들을 순회하면서 원하는 데이터를 구현해둔 함수를 통해 데이터를 채워넣습니다.
</span>    <span class="k">for</span> <span class="n">instance</span> <span class="ow">in</span> <span class="n">context</span><span class="p">[</span><span class="s">'photo_list'</span><span class="p">]:</span>
        <span class="c1"># get_gps는 이전에 구현해둔 사진 파일에서 gps 정보를 추출하는 함수입니다.
</span>        <span class="c1"># https://kimdoky.github.io/front/2018/03/22/front-google-map.html
</span>        <span class="n">instance</span><span class="p">.</span><span class="n">lat</span><span class="p">,</span> <span class="n">instance</span><span class="p">.</span><span class="n">lng</span> <span class="o">=</span> <span class="n">get_gps</span><span class="p">(</span><span class="n">instance</span><span class="p">.</span><span class="n">photo</span><span class="p">.</span><span class="n">path</span><span class="p">)</span>
        <span class="n">instance</span><span class="p">.</span><span class="n">save</span><span class="p">()</span>
    <span class="k">return</span> <span class="n">context</span>
</code></pre></div></div>

<p>DB를 보거나, 서버 화면, 템플릿, 어드민 페이지를 통해서 원하는 기능들이 적용 된 것을 확인 할 수 있습니다.</p>
:ET